import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board):
    lines = []
    lines.extend(board)
    lines.extend([[board[i][j] for i in range(3)] for j in range(3)])
    lines.append([board[i][i] for i in range(3)])
    lines.append([board[i][2 - i] for i in range(3)])
    
    for line in lines:
        if line[0] == line[1] == line[2] != ' ':
            return line[0]
    return None

def is_board_full(board):
    return all(cell != ' ' for row in board for cell in row)

def get_empty_positions(board):
    return [(i, j) for i in range(3) for j in range(3) if board[i][j] == ' ']

def player_move(board):
    while True:
        try:
            row = int(input("Enter row (0-2): "))
            col = int(input("Enter column (0-2): "))
            if board[row][col] == ' ':
                board[row][col] = 'X'
                break
            else:
                print("Position already taken. Try again.")
        except (ValueError, IndexError):
            print("Invalid input. Please enter numbers between 0 and 2.")

def ai_move(board):
    for row, col in get_empty_positions(board):
        board[row][col] = 'O'
        if check_winner(board) == 'O':
            return
        board[row][col] = ' '
    
    for row, col in get_empty_positions(board):
        board[row][col] = 'X'
        if check_winner(board) == 'X':
            board[row][col] = 'O'
            return
        board[row][col] = ' '

    
    row, col = random.choice(get_empty_positions(board))
    board[row][col] = 'O'

def main():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X' 

    while True:
        print_board(board)
        
        if current_player == 'X':
            player_move(board)
        else:
            ai_move(board)

        winner = check_winner(board)
        if winner:
            print_board(board)
            print(f"{winner} wins!")
            break
        elif is_board_full(board):
            print_board(board)
            print("It's a draw!")
            break

        current_player = 'O' if current_player == 'X' else 'X'

if __name__ == "__main__":
    main()
